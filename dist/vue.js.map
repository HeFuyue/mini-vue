{"version":3,"file":"vue.js","sources":["../src/observe/array.js","../src/observe/dep.js","../src/observe/index.js","../src/observe/watcher.js","../src/state.js","../src/compiler/parse.js","../src/compiler/index.js","../src/vdom/patch.js","../src/vdom/index.js","../src/lifeCycle.js","../src/utils.js","../src/init.js","../src/globalAPI.js","../src/index.js"],"sourcesContent":["const oldArrayProto = Array.prototype \r\n\r\nexport let newArrayProto = Object.create(oldArrayProto) // 复制数组原始的方法, newArrayProto.__proto__ === Array.prototype\r\n\r\nconst methods = ['push', 'pop', 'shift', 'unshift', 'reverse', 'sort', 'splice'] // 重写7个能修改原数组的方法\r\n\r\nmethods.forEach(method => {\r\n    newArrayProto[method] = function(...args) {\r\n        console.log(\"修改数组的方法被调用\")\r\n\r\n        const observeArray = this.__ob__.observeArray // this.__ob__ = class Observer {}\r\n\r\n        // todos...\r\n\r\n        const result = oldArrayProto[method].call(this, ...args) // 调用数组原始的方法, this指向调用该方法的数组\r\n\r\n         // 借助Observer类身上的observeArray方法对数组修改的新值进行数据监视\r\n        switch (method) {\r\n            case 'push':\r\n            case 'unshift':\r\n                observeArray(args)\r\n                break;\r\n            case 'splice': \r\n                observeArray(args.splice(2))\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.__ob__.dep.notify() // 通知页面进行更新\r\n        return result\r\n    }\r\n})\r\n","/*  观察者模式：\r\n    给模板中的属性增加一个收集器：dep\r\n    将页面渲染逻辑封装在watcher中(vm._update(vm._render()))\r\n    让dep记住这个watcher, 当属性变化时找到该属性的dep中存放的对应watcher, 调用渲染方法即可\r\n*/\r\n\r\nlet id = 0\r\n\r\nexport default class Dep {\r\n    constructor() {\r\n        this.id = id++\r\n        this.subs = [] // subs用于存放该属性对应的watcher(一个属性可能在n个视图中使用, 每个视图有自己的watcher)\r\n    }\r\n\r\n    addSub(watcher) {\r\n        this.subs.push(watcher) // 将该属性对应的watcher存放在dep里面的subs中\r\n    }\r\n\r\n    depend() {\r\n        Dep.target.addDep(this) // this指向当前的属性的dep, 将该dep与watcher双向记录\r\n    }\r\n\r\n    notify() { // 通知watcher更新的方法\r\n        this.subs.forEach(watcher => watcher.update())\r\n    }\r\n}\r\n\r\nDep.target = null\r\nlet stack = []\r\n\r\nexport function pushTarget(watcher) {\r\n    Dep.target = watcher\r\n    stack.push(watcher)\r\n}\r\n\r\nexport function popTarget() {\r\n    stack.pop()\r\n    Dep.target = stack[stack.length - 1]\r\n}","import {newArrayProto} from './array.js'\r\nimport Dep from './dep.js'\r\n\r\nclass Observer {\r\n    constructor(data) {\r\n        // data.__ob__ = this, 给无论是数组还是对象的data添加__ob__属性, 可以通过查找data身上是否有__ob__属性, 判断数据是否已经被监视过\r\n        Object.defineProperty(data, '__ob__', {\r\n            value: this,\r\n            enumerable: false // 在对对象进行遍历的时候(this.walk), 会遍历__ob__属性, __ob__属性指向Observer类，类里面又有__ob__属性，会造成无限循环，应设置__ob__属性为不可遍历\r\n        })\r\n\r\n        this.dep = new Dep() // 给所有对象/数组属性添加dep, 如果后续数组长度发生变化, 或对象有新增属性, 可以收集依赖并更新\r\n\r\n        if (Array.isArray(data)) { // 对数组进行数据监视非常耗费性能(在数组较长的情况下), 而且一般不通过索引值修改数组，因此不对数组进行数据监视\r\n            this.observeArray(data) // 如果数组内有对象，对数组内的对象添加数据监视\r\n            data.__proto__ = newArrayProto // 重写数组的7个方法，使得调用这几个方法修改数组时能被监控到\r\n            // data.__ob__ = this // this指向Observer类(其中包含有observeArray(data)方法)，给data添加__ob__属性并指向Observer类，在data调用数组的修改方法时，能够访问到Observer类上的observeArray(data)方法，从而给新修改的值添加数据监视\r\n        } else {\r\n            this.walk(data) // 调用类身上的walk()方法对data的各属性进行遍历，变成响应式数据\r\n        }\r\n    }\r\n\r\n    walk(data) {\r\n        // Object.keys(data)返回data身上所有的属性名组成的数组\r\n        Object.keys(data).forEach(key => {\r\n            return defineReactive(data, key, data[key]) // 使用defineReactive()方法对属性值进行响应式处理，返回的是一个重新定义的data, 性能差\r\n        })\r\n    }\r\n\r\n    observeArray(data) {\r\n        data.forEach(item => observe(item)) // 若数组内部具有对象，还需要对该对象进行数据监视\r\n    }\r\n}\r\n\r\nfunction dependArray(array) {\r\n    for (let i = 0; i < array.length; i++) {\r\n        array[i].__ob__ && array[i].__ob__.dep.depend()\r\n        if (Array.isArray(array[i])) {\r\n            dependArray(array[i])\r\n        }\r\n    }\r\n}\r\n\r\nexport function defineReactive(target, key, value) {\r\n    if (typeof value === 'object') observe(value)\r\n    let childOb = observe(value) // 使用递归对data进行深度的数据劫持, childOb上面有dep属性可用于依赖收集\r\n    let dep = new Dep() // 给所有属性添加dep\r\n    // Object.defineProperty()只能劫持对象现有的属性，对新增以及删除的属性，需要借助$set, $delete等api\r\n    Object.defineProperty(target, key, { // closure\r\n        get() {\r\n            // console.log(\"属性值调用getter读取了\")\r\n            if (Dep.target && !childOb) {\r\n                dep.depend() // watcher与普通属性的dep双向收集\r\n            } else if (Dep.target && childOb) {\r\n                childOb.dep.depend() // 让数组和对象本身也实现依赖收集, 之所以不用dep.depend()而是用了childOb.dep.depend(), 是因为数组更新时, 调用的是__ob__.dep.notify(), 是在new Observer的时候生成的那个dep; dep.depend()是在defineReactive()函数里let dep = new Dep()生成的dep, watcher必须记住前者而不是后者(源码这里没有这个!childOb的判断, 会造成数组和对象的重复依赖收集, 做了优化)\r\n            \r\n                if (Array.isArray(value)) {\r\n                    dependArray(value) // 如果数组里面还嵌套着数组, 需要继续对嵌套数组做依赖收集工作\r\n                }\r\n            }\r\n            return value\r\n        },\r\n\r\n        set(newValue) {\r\n            if (newValue === value) return\r\n            observe(value) // 如果用户修改的值是一个对象，需要继续进行数据劫持\r\n            // console.log(\"属性值调用setter修改了\")\r\n            value = newValue\r\n            dep.notify()\r\n        }\r\n    })\r\n}\r\n\r\nexport function observe(data) {\r\n    if (typeof data !== 'object' || data.__ob__ !== undefined) return // 递归的baseCase\r\n\r\n    return new Observer(data) // 如果一个实例被劫持过，就不需要再被劫持了。可借助Observer类定义响应式数据，通过判断是不是该类的实例来判断是否被劫持过\r\n    // const newData = new Observer(data)\r\n    // console.log(newData === data)\r\n}\r\n\r\nexport function set(target, key, value) {\r\n    // 通过索引修改数组的项, 通过splice方法实现\r\n    if (Array.isArray(target) && typeof key === 'number') {\r\n        target.length = Math.max(target.length, key)\r\n        target.splice(key, 1, value)\r\n        return value\r\n    }\r\n    // 已经有的属性, 直接修改即可\r\n    if (key in target && !(key in Object.prototype)) {\r\n        target[key] = value\r\n        return value\r\n    }\r\n\r\n    const observer = target.__ob__\r\n    // 被新增属性的对象没有__ob__, 不是响应式数据, 不需要做响应式处理\r\n    if (!observer) {\r\n        target[key] = value\r\n        return value\r\n    }\r\n\r\n    defineReactive(observer.value, key, value) // 对新增属性进行响应式处理\r\n    observer.dep.notify() // 通知视图更新\r\n    return value\r\n}\r\n\r\nexport function del (target, key) {\r\n    // 通过索引删除数组的项, 通过splice方法实现\r\n    if (Array.isArray(target) && typeof key === 'number') {\r\n      target.splice(key, 1)\r\n      return\r\n    }\r\n\r\n    const observer = target.__ob__\r\n    // target没有key属性, 不需要删除\r\n    if (!target[key]) {\r\n      return\r\n    }\r\n\r\n    delete target[key]\r\n    // 被删除的不是响应式数据, 直接返回即可\r\n    if (!observer) {\r\n      return\r\n    }\r\n    // 通知页面更新\r\n    observer.dep.notify()\r\n}\r\n","import {pushTarget, popTarget} from './dep.js'\r\n\r\nlet id = 0\r\n\r\nexport default class Watcher {\r\n    constructor(vm, updateFnOrWatchExp, options, cb) {\r\n        this.id = id++\r\n        this.renderWatcher = options // options为true则为渲染watcher\r\n\r\n        if (typeof updateFnOrWatchExp === 'function') { // 渲染watcher是更新页面的方法, 计算属性watcher是计算计算属性值的方法, 用户自定义watcher是用户传入vm.$watch()中的返回被观测对象的方法\r\n            this.getter = updateFnOrWatchExp // getter表明调用该函数会发生取值的操作\r\n        } else { // 用户自定义watcher中用户传入的被监测对象名\r\n            this.getter = function() {\r\n                return vm[updateFnOrWatchExp]\r\n            }\r\n        }\r\n        \r\n        this.depId = new Set() // 借助set实现dep去重\r\n        this.deps = [] // watcher也需要收集dep, 用于处理计算属性和清理等的工作\r\n        this.vm = vm\r\n        this.lazy = options.lazy // lazy属性用于控制初次加载是否要立即渲染页面(对于渲染watcher, 需要去渲染; 对于计算属性watcher, 应当是dirty属性为真才去渲染)\r\n        this.dirty = this.lazy // dirty属性用于控制是否去调用getter()更新计算属性(dirty为真说明计算属性应当发生了改变, 即计算属性所依赖的属性发生了变化。如果同一个计算属性在页面上出现多次, 只需要计算一次值即可, 之后就应当将dirty变为false)\r\n        this.user = options.user //是否为用户自定义watcher\r\n        this.cb = cb // 用户自定义watcher中被监测对象发生变化后执行的回调\r\n        this.value = this.lazy? undefined : this.get() // 初次渲染页面调用this.get()方法, 或用户自定义watcher取得被监测对象的当前值\r\n    }\r\n\r\n    addDep(dep) { // watcher与dep相互收集的方法\r\n        let id = dep.id\r\n        if (!this.depId.has(id)) { // 如果同一个属性在当前组件中用到了多次, watcher只需要记录一次dep即可, 需要进行去重操作\r\n            this.depId.add(id)\r\n            this.deps.push(dep) // watcher收集dep\r\n            dep.addSub(this) // dep收集watcher\r\n        }\r\n    }\r\n\r\n    evaluate() {\r\n        this.value = this.get() // 将计算属性的计算结果value挂在watcher上, 方便去取值\r\n        this.dirty = false // 计算属性值已经得到了, 数据不需要更新, dirty设置为false\r\n    }\r\n\r\n    get() {\r\n        // Dep.target = this // this指向Watcher的实例, Dep类的静态属性target指向watcher的实例, 是为了让dep能够记录下对应的watcher\r\n        // this.getter() // 渲染视图的方法, 会去vm上取值, 调用属性的get方法, 可在属性的get方法中添加该watcher\r\n        // Dep.target = null // 在视图渲染完毕, dep记录下当前对应的watcher后, 需要将Dep.target复原(如果在模板范围外读取属性, 不应当记录在dep中, 且此时的watcher应该为null)\r\n        \r\n        /* 针对computed重写get方法： \r\n        计算属性本身需要有一个watcher, 用于收集计算属性所依赖的那些属性的dep, 才能实现计算属性的更新。\r\n        计算属性的watcher应该被包含在当前组件的渲染watcher之中, 在属性触发get之后能够先被计算属性watcher捕获, 再被渲染watcher捕获从而更新页面。\r\n        计算属性所依赖的属性需要同时记住计算属性watcher以及组件的渲染watcher, 因此需要维护一个栈, 存放watcher\r\n         */\r\n\r\n        /* 计算属性中的watcher：\r\n        组件初次渲染时, 调用mountComponent()方法创建了渲染watcher, 渲染watcher在创建时调用了本方法(第一次调用), 将渲染watcher自身添加到stack中, 并将Dep.target指向该watcher, 此时stack = [Watcher: {renderWatcher: true, ...}]。\r\n        执行到pushTarget(this)之后, 接下来执行this.getter(), 对渲染watcher来说就是渲染页面的方法, 渲染过程中发现页面上用到了计算属性, 调用计算属性的createComputedGetter方法, 在里面调用evaluate()方法, evaluate()方法再次调用到本方法(第二次调用), 将计算属性watcher推入stack中, 并将Dep.target指向此渲染watcher, 此时stack = [Watcher: {renderWatcher: true, ...}， Watcher: {renderWatcher: {lazy: true}, ...}]\r\n        同时第二次调用pushTarget(this)之后, 接下来执行this.getter(), 对计算属性watcher来说是计算计算属性值的方法, 需要去读取计算属性所依赖的属性, 于是就调用这些属性的get()方法(Object.defineProperty()), 因为存在Dep.target, 所以这些属性的dep收集到了当前的Dep.target, 也就是计算属性watcher。\r\n        计算属性值得到后, 第二次调用的get()走到了popTarget(), 于是stack中的计算属性watcher被清除, Dep.target重新指向渲染watcher。接下来回到createComputedGetter, 在createComputedGetter中继续调用Dep.target(计算属性watcher)身上的depend方法, 让计算属性所依赖的属性记住渲染watcher, 这样这些属性同时记住了渲染watcher与计算属性watcher, 可以实现计算属性更新与页面更新。\r\n        */\r\n\r\n        // debugger\r\n        pushTarget(this) // 将当前watcher推入栈中, 并将Dep.target指向当前的watcher\r\n        const value = this.getter.call(this.vm) // 对于计算属性watcher, getter()就是用户传入的getter\r\n        popTarget() // 当前的watcher出栈, 并将Dep.target指向上一个入栈的watcher\r\n        return value\r\n    }\r\n\r\n    depend() { // depend()方法让watcher中记录的那些dep, 再记录watcher(记住计算属性watcher, 也记住渲染watcher)\r\n        let i = this.deps.length\r\n\r\n        while(i--) {\r\n            this.deps[i].depend()\r\n        }\r\n    }\r\n\r\n    update() {\r\n        if (this.lazy) {\r\n            this.dirty = true // 如果是计算属性, 依赖的属性变化了, dirty应当为true\r\n        } else {\r\n            queueWatcher(this) // 同一个属性有可能更新多次(比如vm.age = 19; vm.age = 20; vm.age = 21), 或者有多个组件都会要更新, 希望能够在多次调用update()后, 最终更新视图的该组件watcher只执行一次(即每个组件run()方法只调用一次)\r\n        }\r\n    }\r\n\r\n    run() {\r\n        // this.get() // 渲染watcher更新页面\r\n        let oldValue = this.value\r\n        let newValue = this.get()\r\n\r\n        if (this.user) {\r\n            this.cb.call(this.vm, newValue, oldValue)\r\n        }\r\n    }\r\n}\r\n\r\nlet queue = []\r\nlet has = {}\r\nlet pending = false\r\n\r\nfunction flushSchedulerQueue() {\r\n    let flushQueue = queue.slice(0) // 复制一份queue\r\n    queue = []\r\n    has = {}\r\n    pending = false // 先将pending调整为false, 如果在更新的过程中又遇到新的watcher, 可以继续执行更新操作\r\n    flushQueue.forEach(watcher => watcher.run()) // 真正执行更新\r\n}\r\n\r\nfunction queueWatcher(watcher) {\r\n    // 同一个属性可能被更新了多次(比如vm.age = 19; vm.age = 20; vm.age = 21), 借助对象进行watcher的去重, 由于更新是异步操作(修改属性的操作完成后才应该更新), 所以只会取最新的更新值\r\n    let id = watcher.id\r\n\r\n    if(!has[id]) {\r\n        queue.push(watcher)\r\n        has[id] = true\r\n        // console.log(queue)\r\n    }\r\n\r\n    // 防抖操作, 被更新的组件可能有多个, 希望多次调用update()后, 最终更新视图的watcher只执行一次\r\n    if (!pending) {\r\n        pending = true\r\n        nextTick(flushSchedulerQueue)\r\n    }\r\n}\r\n\r\nlet callbacks = []\r\nlet waiting = false\r\n\r\nlet timerFunc // timerFunc方法实现异步调用函数\r\nif (Promise) { // Promise是微任务, 执行优先级在宏任务之后, 应该优先把timerFunc设置为Promise形式\r\n    timerFunc = () => {\r\n        Promise.resolve().then(flushCallbacks)\r\n    }\r\n} else if (MutationObserver) { // MutationObserver是H5的api\r\n    let Observer = new MutationObserver(flushCallbacks)\r\n    let textNode = document.createTextNode(1)\r\n    Observer.observe(textNode, {\r\n        characterData: true\r\n    })\r\n    timerFunc = () => {\r\n        textNode.textContent = 2\r\n    }\r\n} else if (setImmediate) { // 仅IE支持\r\n    timerFunc = () => {\r\n        setImmediate(flushCallbacks)\r\n    }\r\n} else if (setTimeout) {\r\n    timerFunc = () => {\r\n        setTimeout(flushCallbacks)\r\n    }\r\n}\r\n\r\nfunction flushCallbacks() { // flushCallbacks()方法用于调用callbacks队列中所有的更新回调函数, 实现更新操作\r\n    let flushCb = callbacks.slice(0)\r\n    waiting = false\r\n    callbacks = []\r\n    flushCb.forEach(cb => cb())\r\n}\r\n\r\n// 更新是异步操作, 需要借助nextTick方法进行异步调用flushSchedulerQueue()方法, 实现异步更新\r\nexport function nextTick(cb) {\r\n    callbacks.push(cb)\r\n    // 防抖操作, 如果nextTick被调用多次, 应该先将所有的回调函数放在一个队列中, 最后统一执行\r\n    if (!waiting) {\r\n        timerFunc(flushCallbacks)\r\n        waiting = true\r\n    }\r\n}\r\n","import {observe} from './observe/index.js'\r\nimport Watcher from './observe/watcher.js'\r\nimport Dep from './observe/dep.js'\r\nimport {defineReactive} from './observe/index.js'\r\n\r\nexport function initState(vm) {\r\n    const options = vm.$options // 重新从vm身上获取用户传入的options\r\n\r\n    if (options.data) {\r\n        initData(vm) // 如果用户传入的配置项有data，则调用initData方法进行数据的响应式处理\r\n    }\r\n\r\n    if (options.computed) {\r\n        initComputed(vm) // 如果用户传入的配置项有computed, 则调用initComputed方法实现计算属性\r\n    }\r\n\r\n    if (options.watch) {\r\n        initWatch(vm)\r\n    }\r\n\r\n    if (options.props) {\r\n        initProps(vm)\r\n    }\r\n\r\n    if (options.methods) {\r\n        initMethods(vm, options.methods)\r\n    }\r\n}\r\n\r\nfunction proxy(target, key, name) {\r\n    Object.defineProperty(target, key, {\r\n        get() {\r\n            return target[name][key]\r\n        },\r\n        set(newValue) {\r\n            target[name][key] = newValue\r\n        }\r\n    })\r\n}\r\n\r\nfunction initData(vm) {\r\n    let data = vm.$options.data // 重新从vm身上获取到data属性\r\n    data = typeof data === \"function\" ? data.call(vm) : data // data可能是对象或函数\r\n    // console.log(data)\r\n    observe(data) // 调用observe方法对data进行响应式处理\r\n    vm._data = data // 将vm.$options上面的data赋给vm._data\r\n\r\n    for (let key in data) {\r\n        proxy(vm, key, '_data') // 将vm._data中的数据代理到vm中，可以不用通过vm._data.xxx来访问数据\r\n    }\r\n}\r\n\r\nfunction initComputed(vm) {\r\n    let computed = vm.$options.computed\r\n    let watchers = vm._computedWatchers = {} // vm._computedWatchers存放着所有计算属性的计算属性watcher({lazy: true})\r\n\r\n    for (let key in computed) {\r\n        let userDef = computed[key]\r\n        const getter = typeof userDef === 'function' ? userDef : userDef.get\r\n\r\n        watchers[key] = new Watcher(vm, getter, {lazy: true}) // lazy属性表明该watcher经过new之后不会调用更新页面的方法, 并将该watcher存放在vm的_computedWatchers中\r\n\r\n        defineComputed(vm, key, userDef) // defineComputed()方法用于实现计算属性\r\n    }\r\n}\r\n\r\nfunction initWatch(vm) {\r\n    let watch = vm.$options.watch\r\n\r\n    for (let key in watch) { // 循环用户传入的被监测属性\r\n        const handler = watch[key]\r\n\r\n        if (typeof handler === 'string') { // 如果watch中写的是一个字符串, 会去methods中找同名的方法, 该属性变化后执行methods中对应的方法\r\n            createWatcher(vm, key, vm[handler])\r\n        } else if (Array.isArray(handler)) { // 如果被监测属性后面写的是一个数组, 则属性变化后执行数组中的所有回调\r\n            for (let i = 0; i < handler.length; i++) {\r\n                createWatcher(vm, key, handler[i])\r\n            }\r\n        } else { // watch中写的是函数, 在属性变化后直接调用\r\n            createWatcher(vm, key, handler)\r\n        }\r\n    }\r\n}\r\n\r\nfunction initProps(vm) {\r\n    const propsData = vm.$options.propsData || {}\r\n    const props = vm._props = {}\r\n\r\n    Object.keys(propsData).forEach(key => {\r\n        defineReactive(props, key, propsData[key])\r\n        if (!(key in vm)) {\r\n            proxy(vm, key, '_props')\r\n        }\r\n    })\r\n}\r\n\r\nfunction initMethods(vm, methods) {\r\n    for (let key in methods) {\r\n        vm[key] = typeof methods[key] !== 'function' ? function() {} : methods[key].bind(vm)\r\n    }\r\n}\r\n\r\nlet target\r\nfunction add(event, fn) {\r\n    target.$on(event, fn)\r\n}\r\nfunction remove(event, fn) {\r\n    target.$off(event, fn)\r\n}\r\n\r\nexport function initRender(vm) {\r\n    vm._vnode = null // the root of the child tree\r\n    vm._staticTrees = null // v-once cached trees\r\n    var options = vm.$options\r\n    var parentVnode = (vm.$vnode = options._parentVnode) // the placeholder node in parent tree\r\n    var renderContext = parentVnode && parentVnode.context\r\n    vm.$slots = resolveSlots(options._renderChildren, renderContext)\r\n    vm.$scopedSlots = resolveScopedSlots(options._renderChildren, renderContext)\r\n    /* vm.$scopedSlots = parentVnode\r\n        ? normalizeScopedSlots(vm.$parent, parentVnode.data.scopedSlots, vm.$slots)\r\n        : emptyObject;\r\n    // bind the createElement fn to this instance\r\n    // so that we get proper render context inside it.\r\n    // args order: tag, data, children, normalizationType, alwaysNormalize\r\n    // internal version is used by render functions compiled from templates\r\n    // @ts-expect-error\r\n    vm._c = function (a, b, c, d) { return createElement$1(vm, a, b, c, d, false); };\r\n    // normalization is always applied for the public version, used in\r\n    // user-written render functions.\r\n    // @ts-expect-error\r\n    vm.$createElement = function (a, b, c, d) { return createElement$1(vm, a, b, c, d, true); };\r\n    // $attrs & $listeners are exposed for easier HOC creation.\r\n    // they need to be reactive so that HOCs using them are always updated\r\n    var parentData = parentVnode && parentVnode.data; */\r\n    /* istanbul ignore else */\r\n    /* {\r\n        defineReactive(vm, '$attrs', (parentData && parentData.attrs) || emptyObject, function () {\r\n            !isUpdatingChildComponent && warn$2(\"$attrs is readonly.\", vm);\r\n        }, true);\r\n        defineReactive(vm, '$listeners', options._parentListeners || emptyObject, function () {\r\n            !isUpdatingChildComponent && warn$2(\"$listeners is readonly.\", vm);\r\n        }, true);\r\n    } */\r\n}\r\n\r\nexport function resolveSlots(children, context) {\r\n    if (!children || !children.length) {\r\n        return {};\r\n    }\r\n    var slots = {};\r\n    for (var i = 0, l = children.length; i < l; i++) {\r\n        var child = children[i];\r\n        var data = child.data;\r\n        // remove slot attribute if the node is resolved as a Vue slot node\r\n        if (data && data.attrs && data.attrs.slot) {\r\n            delete data.attrs.slot;\r\n        }\r\n        // named slots should only be respected if the vnode was rendered in the\r\n        // same context.\r\n        if ((child.context === context || child.fnContext === context) &&\r\n            data &&\r\n            data.slot != null) {\r\n            var name_1 = data.slot;\r\n            var slot = slots[name_1] || (slots[name_1] = []);\r\n            if (child.tag === 'template') {\r\n                slot.push.apply(slot, child.children || []);\r\n            }\r\n            else {\r\n                slot.push(child);\r\n            }\r\n        }\r\n        else {\r\n            (slots.default || (slots.default = [])).push(child);\r\n        }\r\n    }\r\n    // ignore slots that contains only whitespace\r\n    /* for (var name_2 in slots) {\r\n        if (slots[name_2].every(isWhitespace)) {\r\n            delete slots[name_2];\r\n        }\r\n    } */\r\n    return slots;\r\n}\r\n\r\nexport function resolveScopedSlots(children) {\r\n    if (!children || !children.length) {\r\n        return {}\r\n    }\r\n    let scopedSlots = {}\r\n    for (let i = 0; i < children.length; i++) {\r\n        let child = children[i]\r\n        let data = child.data\r\n        if (data && data.scopedSlots != null) {\r\n            let slot = data.scopedSlots\r\n            scopedSlots = {...scopedSlots, ...slot}\r\n        }\r\n    }\r\n    return scopedSlots\r\n}\r\n\r\nexport function initEvents(vm) {\r\n    let target\r\n    vm._events = Object.create(null)\r\n    let listeners = vm.$options._parentListeners\r\n    if (listeners) {\r\n        updateComponentListeners(vm, listeners)\r\n    }\r\n}\r\n\r\nfunction updateComponentListeners(vm, listeners, oldListeners) {\r\n    target = vm\r\n    updateListeners(listeners, oldListeners || {}, add, remove, vm)\r\n    target = undefined\r\n}\r\n\r\nfunction updateListeners(on, oldOn, add, remove) {\r\n    let name, cur, old\r\n    for (name in on) {\r\n        cur = on[name]\r\n        old = oldOn[name]\r\n        if (old === undefined) {\r\n            if (cur.fns === undefined) {\r\n                cur = on[name]\r\n            }\r\n            add(name, cur)\r\n        }\r\n        else if (cur !== old) {\r\n            old.fns = cur\r\n            on[name] = old\r\n        }\r\n    }\r\n    for (name in oldOn) {\r\n        if (on[name] === undefined) {\r\n            remove(name, oldOn[name])\r\n        }\r\n    }\r\n}\r\n\r\nfunction createWatcher(vm, target, cb) { // 无论watch有几种形式, 最终都转化为vm.$watch, 去构建用户自定义watcher\r\n    vm.$watch(target, cb)\r\n}\r\n\r\nfunction defineComputed(target, key, userDef) {\r\n    // const getter = typeof userDef === 'function' ? userDef : userDef.get\r\n    const setter = typeof userDef === 'function' ? (() => {}) : userDef.set\r\n\r\n    // 计算属性本质是一个响应式的属性, 利用Object.defineProperty()实现\r\n    Object.defineProperty(target, key, {\r\n        get: createComputedGetter(key),\r\n        set: setter\r\n    })\r\n}\r\n\r\nfunction createComputedGetter(key) {\r\n    return function() {\r\n        const watcher = this._computedWatchers[key] // 获取对应计算属性的计算属性watcher({lazy: true})\r\n        // debugger\r\n        if (watcher.dirty) { // 如果watcher的dirty属性为真, 则计算属性所依赖的属性发生了变化, 计算属性需要去更新(如果同一个计算属性在组件中使用多次, 则第一次计算时dirty为真, 计算完成后dirty改为假, 只要依赖的属性不更新, 那么后面的相同计算属性就不用再求值)\r\n            watcher.evaluate() // 调用evaluate()方法进行计算属性的求值, 并将该计算属性的dirty改为假\r\n        }\r\n\r\n        if (Dep.target) {\r\n            watcher.depend() // 此时计算属性watcher已经出栈, 再让计算属性所依赖的属性的dep记录下渲染watcher\r\n        }\r\n        // console.log(watcher)\r\n\r\n        return watcher.value\r\n    }\r\n}\r\n","const ncname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z]*`\r\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})`\r\nconst startTagOpen = new RegExp(`^<${qnameCapture}`)\r\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`)\r\nconst attribute = /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/\r\nconst startTagClose = /^\\s*(\\/?)>/\r\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g\r\nconst dynamicArgAttribute = /^\\s*((?:v-[\\w-]+:|@|:|#)\\[[^=]+?\\][^\\s\"'<>\\/=]*)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/\r\n\r\nexport function parseHTML(htmlText) {\r\n    const ELEMENT_TYPE = 1\r\n    const TEXT_TYPE = 3\r\n    const stack = [] // 利用栈生成AST语法树\r\n    let currentNode // currentNode指针指向栈中的最后一个节点\r\n    let root // AST语法树的根节点\r\n\r\n    // createASTNode方法返回一个AST语法树节点\r\n    function createASTNode(tag, attrs) {\r\n        return {\r\n            tag,\r\n            type: ELEMENT_TYPE,\r\n            attrs,\r\n            parent: null,\r\n            children: []\r\n        }\r\n    }\r\n\r\n    /* function createASTElement(ASTNode) {\r\n        return {\r\n            type: 1,\r\n            tag: ASTNode.tag,\r\n            attrsList: ASTNode.attrs,\r\n            parent: ASTNode.parent,\r\n            children: ASTNode.children\r\n        }\r\n    } */\r\n\r\n    // advance方法用来对HTML的文本进行截取, 将解析后的标签去除\r\n    function advance(n) {\r\n        htmlText = htmlText.substring(n)\r\n    }\r\n\r\n    // start方法用来创建开始标签对应的AST语法树节点\r\n    function start(tag, attrs) {\r\n        const startNode = createASTNode(tag, attrs)\r\n        if (tag !== 'input') stack.push(startNode) // 将当前节点推入栈\r\n\r\n        // 如果指针非空, 则存在父节点\r\n        if (currentNode) {\r\n            startNode.parent = currentNode // 当前节点的parent指向父节点\r\n            currentNode.children.push(startNode) // 在父节点的children属性中加入当前节点\r\n            if (tag !== 'input') currentNode = startNode // 当前节点作为父节点\r\n        }\r\n\r\n        // 不存在父节点的情况, 即初次调用该方法\r\n        if(!root) {\r\n            root = startNode // 当前节点作为根节点\r\n            currentNode = root // 当前节点作为父节点\r\n        }\r\n        /* startNode.el = createASTElement(startNode)\r\n        console.log(startNode) */\r\n    }\r\n\r\n    // text方法用来创建文本对应的AST语法树节点\r\n    function text(char) {\r\n        char = char.replace(/\\s/g, '') // 删去文本中的空格\r\n        \r\n        // 对父节点的children属性添加该文本\r\n        currentNode.children.push({\r\n            type: TEXT_TYPE,\r\n            text: char,\r\n            parent: currentNode\r\n        })\r\n    }\r\n\r\n    // end方法用来处理结束标签\r\n    function end(name) {\r\n        stack.pop() // 遇到结束标签, 则该标签内容已解析完毕, 需要返回上一级父节点, 将当前节点出栈\r\n        currentNode = currentNode.parent // 父节点指针指向当前节点的父节点\r\n    }\r\n\r\n    // parseStartTag方法用来读取开始标签的标签名, 标签属性\r\n    function parseStartTag() {\r\n        const tagStart = htmlText.match(startTagOpen) // 当前HTML文本是否匹配开始标签\r\n        let tagAttrs, tagEnd\r\n\r\n        if (tagStart) {\r\n            // 将当前开始标签的标签名保存在match中\r\n            const match = {\r\n                tagName: tagStart[1],\r\n                attrs: []\r\n            }\r\n            advance(tagStart[0].length) // 删去HTML文本中的当前开始标签的标签名\r\n\r\n            // 没有匹配上结束标签且匹配上了标签属性, 开始解析标签属性\r\n            while (!(tagEnd = htmlText.match(startTagClose)) && (tagAttrs = htmlText.match(attribute) || htmlText.match(dynamicArgAttribute))) {\r\n                if (tagAttrs) {\r\n                    match.attrs.push({name: tagAttrs[1], value: tagAttrs[3] || tagAttrs[4] || tagAttrs[5] || true}) // 若存在标签属性, 则将标签属性写入match中\r\n                    advance(tagAttrs[0].length) // 删去HTML文本中的当前标签属性\r\n                }\r\n            }\r\n\r\n            // 匹配上了结束标签\r\n            if (tagEnd) {\r\n                advance(tagEnd[0].length) // 删去HTML文本中的当前结束标签\r\n            }\r\n            // console.log(match)\r\n            return match // 将解析完的开始标签对象match返回\r\n        }\r\n\r\n        // 未匹配上开始标签\r\n        return false\r\n    }\r\n\r\n    // 该循环将HTML文本进行截取, 分解为开始标签, 标签体以及结束标签, 并调用相应的处理方法形成AST语法树\r\n    while (htmlText) {\r\n        // debugger\r\n        htmlText = htmlText.trim() // 清除HTML文本中的所有开始结束位置的空格和换行符\r\n        let textEnd = htmlText.indexOf('<')\r\n\r\n        if (textEnd === 0) { // 当前HTML文本的开始是一个标签\r\n\r\n            const startTagMatch = parseStartTag() // 匹配开始标签, 如果匹配到, 调用start方法去处理\r\n            if (startTagMatch) {\r\n                start(startTagMatch.tagName, startTagMatch.attrs)\r\n                continue\r\n            }\r\n\r\n            const endTagMatch = htmlText.match(endTag) // 匹配结束标签, 如果匹配到, 调用end方法去处理\r\n            if (endTagMatch) {\r\n                advance(endTagMatch[0].length)\r\n                end(endTagMatch[1])\r\n                continue\r\n            }\r\n        }\r\n\r\n        if (textEnd > 0) { // 当前HTML文本的开始不是标签, 应为标签体\r\n            const char = htmlText.substring(0, textEnd) // 将不是标签的这段HTML截取出来\r\n\r\n            if (char) { // 调用text方法处理标签体\r\n                advance(textEnd)\r\n                text(char)\r\n                continue\r\n            }\r\n            break;\r\n        }\r\n    }\r\n    return root\r\n}\r\n","import {parseHTML} from './parse.js'\r\n\r\nexport function compileToFunction(template) {\r\n    // parseHTML方法用来将HTML文本转换成AST语法树\r\n    let ast = parseHTML(template)\r\n    let astCode = codeGenerator(ast)\r\n    console.log(astCode)\r\n    astCode = `with(this){return ${astCode}}`\r\n    return new Function(astCode)\r\n}\r\n\r\n// attrsGenerator()函数用来生成标签属性的字符串函数\r\nfunction attrsGenerator(attrs) {\r\n    const bindRE = /^:|^v-bind:/\r\n    const onRE = /^@|^v-on:/\r\n    let directives = {}\r\n    let attrString = '{'\r\n    for (let i = 0; i < attrs.length; i++) {\r\n        let attrValue = attrs[i].value\r\n        if (attrs[i].name === 'v-if') {\r\n            directives['v-if'] = attrValue\r\n        } if (attrs[i].name === 'style') {\r\n            let styleAttrValue = ''\r\n            attrs[i].value.split(';').forEach(item => {\r\n                const [name, value] = item.split(':')\r\n                let styleString = `\"${name.trim()}\": \"${value.trim()}\", `\r\n                styleAttrValue += styleString\r\n            })\r\n            attrValue = `{${styleAttrValue.slice(0, styleAttrValue.length - 2)}}`\r\n            attrString += `${attrs[i].name}: ${attrValue}, `\r\n        } else if (bindRE.test(attrs[i].name)) {\r\n            attrString += `\"${attrs[i].name.replace(bindRE, '')}\": ${attrValue}, `\r\n        } else if (onRE.test(attrs[i].name)) {\r\n            if (/=>/.test(attrValue)) {\r\n                attrString += `on: {\"${attrs[i].name.replace(onRE, '')}\": function($event){return (${attrValue}).apply(null, arguments)}}, `\r\n            } else if (/\\(/.test(attrValue)) {\r\n                attrString += `on: {\"${attrs[i].name.replace(onRE, '')}\": function($event){return ${attrValue}}}, `\r\n            } else if (/\\.prevent/.test(attrValue)) {\r\n                attrString += `on: {\"${attrs[i].name.replace(onRE, '').replace(/\\.prevent/, '')}\": function($event){$event.preventDefault();return ${attrValue}}}, `\r\n            } else if (/\\.stop/.test(attrValue)) {\r\n                attrString += `on: {\"${attrs[i].name.replace(onRE, '').replace(/\\.stop/, '')}\": function($event){$event.stopPropagation();return ${attrValue}}}, `\r\n            } else if (/\\.native/.test(attrValue)) {\r\n                attrString += `nativeOn: {\"${attrs[i].name.replace(onRE, '').replace(/\\.native/, '')}\": function($event){return ${attrValue}}}, `\r\n            } else if (/\\.enter/.test(attrValue)) {\r\n                attrString += `on: {\"${attrs[i].name.replace(onRE, '').replace(/\\.enter/, '')}\": function($event) {if ($event.type.indexOf('key') !== 13) return null;return (${attrValue}).apply(null, arguments)}}, `\r\n            } else {\r\n                attrString += `on: {\"${attrs[i].name.replace(onRE, '')}\": ${attrValue}}, `\r\n            }\r\n        } else if (attrs[i].name === 'v-show') {\r\n            attrString += `directives: [{name: \"show\", rawName: \"v-show\", value: (${attrValue}), expression: \"${attrValue}\"}], `\r\n        } else if (attrs[i].name === 'v-slot') {\r\n            attrString += `slot: '${attrValue}', `\r\n        } else {\r\n            attrValue = `\"${attrValue}\"`\r\n            attrString += `${attrs[i].name}: ${attrValue}, `\r\n        }\r\n        // attrString += `${attrs[i].name}: ${attrValue}, `\r\n    }\r\n    return attrString.slice(0, attrString.length - 2) + '}'\r\n}\r\n\r\nfunction codeGenerator(ast) {\r\n    const attrs = ast.attrs\r\n    let hasDirective = false\r\n    if (ast.attrs) {\r\n        for (let i = 0; i < attrs.length; i++) {\r\n            let attrValue = attrs[i].value\r\n            // console.log(attrs[i].name, /v-/.test(attrs[i].name) && ['v-on', 'v-bind', 'v-slot', 'v-show'].every(attr => attrs[i].name.indexOf(attr) < 0))\r\n            if (attrs[i].name === 'v-if') {\r\n                hasDirective = true\r\n                attrs.splice(i, 1)\r\n                return `(${attrValue}) ? _c('${ast.tag}', ${attrs.length ? attrsGenerator(attrs) : null}${ast.children ? `, ${childrenGenerator(ast.children)}` : ''}) : _e()`\r\n            } else if (attrs[i].name === 'v-for') {\r\n                let iterable, iterator\r\n                hasDirective = true\r\n                attrs.splice(i, 1)\r\n                if (/\\sin\\s/.test(attrValue)) {\r\n                    [iterator, iterable] = attrValue.split(' in ')\r\n                } else if (/\\sof\\s/.test(attrValue)) {\r\n                    [iterator, iterable] = attrValue.split(' of ')\r\n                }\r\n                return `_l((${iterable}), function${iterator}{return _c('${ast.tag}', ${attrs.length ? attrsGenerator(attrs) : null}${ast.children ? `, ${childrenGenerator(ast.children)}` : ''})})`\r\n            } else if (attrs[i].name === 'v-model') {\r\n                if (ast.tag === 'input') {\r\n                    let type = attrs.filter(attr => attr.name === 'type')[0].value || 'text'\r\n                    if (type === 'text') {\r\n                        return `_c('input', {directives: [{name: \"model\", rawName: \"v-model\", value: (${attrValue}), expression: \"${attrValue}\"}], attrs: {type: 'text'}, on:{\"input\":function($event){${attrValue} = $event.target.value}}})`\r\n                    } else if (type === 'checkbox') {\r\n                        return `_c('input', {directives: [{name: \"model\", rawName: \"v-model\", value: (${attrValue}), expression: \"${attrValue}\"}], attrs: {type: 'checkbox'}, on: {\"change\": function ($event) {var $$a = ${attrValue},$$el = $event.target,$$c = $$el.checked ? (true) : (false);if (Array.isArray($$a)) {var $$v = null,$$i = _i($$a, $$v);if ($$el.checked) {$$i < 0 && (${attrValue} = $$a.concat([$$v]))} else {$$i > -1 && (${attrValue} = $$a.slice(0, $$i).concat($$a.slice($$i + 1)))}} else {${attrValue} = $$c}}}})`\r\n                    }\r\n                } else {\r\n                    return `_c('${ast.tag}', {model: { value: (${attrValue}), callback: function ($$v) {${attrValue} = $$v},expression: \"${attrValue}\"}})`\r\n                }\r\n            } else if (/v-/.test(attrs[i].name) && ['v-on', 'v-bind', 'v-slot', 'v-show'].every(attr => attrs[i].name.indexOf(attr) < 0)) {\r\n                const [name, arg] = attrs[i].name.split(':')\r\n                return `_c('${ast.tag}', {directives: [{name: \"${name.replace('v-', '')}\",rawName: \"${attrs[i].name}\",value: (${attrValue}),expression: \"${attrValue}\"${arg ? `,arg: \"${arg}\"` : \"\"}}]})`\r\n            } else if (attrs[i].name === 'slot-scope') {\r\n                attrs.splice(i, 1)\r\n                let slotName = 'default'\r\n                for (let i = 0; i < attrs.length; i++) {\r\n                    if (attrs[i].name === 'slot') {\r\n                        slotName = attrs[i].value\r\n                        attrs.splice(i, 1)\r\n                        break\r\n                    }\r\n                }\r\n                return `_c('${ast.tag}', {scopedSlots: _u([{key: \"${slotName}\", fn: function (${attrValue}) {return ${codeGenerator(ast)}}}])})`\r\n            }\r\n        }\r\n\r\n        if (!hasDirective) {\r\n            return `_c('${ast.tag}', ${attrs.length ? attrsGenerator(attrs) : null}${ast.children ? `, ${childrenGenerator(ast.children)}` : ''})`\r\n        }\r\n    } else {\r\n        return `_c('${ast.tag}', ${ast.children ? `, ${childrenGenerator(ast.children)}` : ''})`\r\n    }\r\n    \r\n}\r\n\r\n// _c('div', {id: \"root\"}, _c('div', {id: \"app\", style: {\"background-color\": \"#ccc\", \"color\": \"red\"}}, _v(_s(name) + \"Hello\" + _s(name) + \"Hello\" + _s(hobbys))), _c('span', {on: {\"click\": function($event){return (() => cb(5)).apply(null, arguments)}}, ref: \"age\"}, _v(_s(age))), _c('mycomponent', {a: \"1\", b: \"2\", \"c\": age, on: {\"myevent\": cb}, ref: \"mycomponent\"}, ))\r\n// _c('div', {id: \"root\"}, _c('div', {id: \"app\", style: {\"background-color\": \"#ccc\", \"color\": \"red\"}}, _v(_s(name) + \"Hello\" + _s(name) + \"Hello\" + _s(hobbys))), (age) ? _c('span', {on: {\"click\": function($event){return (() => cb(5)).apply(null, arguments)}}, ref: \"age\"}, _v(_s(age))) : _e(), _c('mycomponent', {a: \"1\", b: \"2\", \"c\": age, on: {\"myevent\": cb}, ref: \"mycomponent\"}, ))\r\n\r\n// childrenGenerator()函数用来生成子标签的字符串函数\r\nfunction childrenGenerator(children) {\r\n    let childrenArr = []\r\n    children.map(child => {\r\n        childrenArr.push(genChild(child))\r\n    })\r\n    return `[${childrenArr.join(', ')}]`\r\n    // return children.map(child => genChild(child)).join(', ')\r\n}\r\n\r\nfunction genChild(child) {\r\n    const defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g // defaultTagRE正则用来匹配{{ 插值 }} 语法\r\n    if (child.type === 1 && child.tag !== 'slot') {\r\n        return codeGenerator(child) // 如果是普通节点, 直接调用codeGenerator()生成字符串函数\r\n    } else if (child.tag === 'slot') {\r\n        let name = 'default'\r\n        let props = []\r\n        child.attrs.forEach(attr => {\r\n            if (attr.name === 'name') {\r\n                name = attr.value\r\n            } else if (/^:|^v-bind:/.test(attr.name)) {\r\n                props.push(`\"${attr.name.replace(/^:|^v-bind:/, '')}\": ${attr.value}`)\r\n            }\r\n        })\r\n        if (!props.length) {\r\n            return `_t('${name}')`\r\n        } else {\r\n            return `_t('${name}', {${props.join(', ')}})`\r\n        }\r\n    } else { // 文本节点\r\n        if (!defaultTagRE.test(child.text)) { // 没有匹配到插值语法, 直接将文本转化为 _v(文本)\r\n            return `_v('${child.text}')`\r\n        }\r\n\r\n        defaultTagRE.lastIndex = 0 // 带有g的正则表达式, lastIndex属性需要置0\r\n        let tokens = []\r\n        let match\r\n        let lastIndex = 0\r\n\r\n        while (match = defaultTagRE.exec(child.text)) {\r\n            let index = match.index // index等于当前匹配到插值的位置\r\n\r\n            if (index > lastIndex) { // index大于上次匹配到插值的位置, 说明两个插值之间存在文本, 需要将这段文本插入到tokens里面\r\n                tokens.push(`\"${match.input.slice(lastIndex, index).trim()}\"`)\r\n            }\r\n            tokens.push(`_s(${match[1]})`) // 将插值里面的内容包上_s(插值)插入到tokens\r\n\r\n            lastIndex = defaultTagRE.lastIndex\r\n            // console.log(match, index, lastIndex)\r\n        }\r\n\r\n        if (lastIndex < child.text.length) { // 最后一次匹配到插值的位置小于文本长度, 说明后面还有文本, 需要继续将文本插入tokens\r\n            tokens.push(`\"${child.text.slice(lastIndex, child.text.length)}\"`)\r\n        }\r\n        // console.log(tokens)\r\n        return `_v(${tokens.join(' + ')})`\r\n    }\r\n}\r\n\r\n/* \r\ncodeGenerator()方法用来将AST语法树转化为字符串函数：\r\n例：\r\n<div id=\"root\">\r\n    <div id = \"app\" style = \"background-color: #ccc; color: red\">\r\n        {{name}} Hello {{name}} Hello\r\n    </div>\r\n    <span>{{age}}</span>\r\n</div>\r\n上述DOM的AST转化为：\r\n_c('div', {id: \"root\"}, _c('div', {id: \"app\", style: {\"background-color\": \"#ccc\", \"color\": \"red\"}}, _v(_s(name) + \"Hello\" + _s(name) + \"Hello\")), _c('span', null, _v(_s(age))))\r\n */\r\n\r\n/* function codeGenerator(ast) {\r\n    return (\r\n        `_c('${ast.tag}', ${ast.attrs.length ? attrsGenerator(ast.attrs) : null}${ast.children ? `, ${childrenGenerator(ast.children)}` : ''})`\r\n    )\r\n} */\r\n","import {isSameVnode} from './index.js'\r\nimport {resolveSlots} from '../state.js'\r\n\r\nexport function patch(oldValue, newValue) {\r\n    // patch方法接收两个参数, oldValue为虚拟DOM（初次挂载情况）或者更新前的真实DOM（更新DOM情况）, 对真实DOM做初次挂载或更新\r\n    if (!oldValue) { // 组件的挂载\r\n        return createElement(newValue) // 返回vm.$el, 此时vm.$el就是组件渲染的结果\r\n    }\r\n    \r\n    const isRealElement = oldValue.nodeType // 判断是否为真实DOM\r\n\r\n    if (isRealElement) { // oldValue为真实DOM, 进行更新\r\n        let newElement = createElement(newValue)\r\n        let parentElement = oldValue.parentNode\r\n        parentElement.insertBefore(newElement, oldValue.nextSibling)\r\n        parentElement.removeChild(oldValue)\r\n        return newElement\r\n    } else {\r\n        // oldValue为虚拟DOM, 利用diff算法进行比较\r\n        return patchVnode(oldValue, newValue)\r\n    }\r\n}\r\n\r\nfunction patchVnode(oldVnode, newVnode) { // 虚拟DOM的Diff算法\r\n    if (!isSameVnode(oldVnode, newVnode)) { // 两个虚拟DOM标签名或者key不同, 即不是相同节点, 直接替换\r\n        let el = createElement(newVnode)\r\n        oldVnode.el.parentNode.replaceChild(el, oldVnode.el)\r\n        return el\r\n    }\r\n\r\n    let el = newVnode.el = oldVnode.el // 是相同节点, 则复用老节点元素 \r\n\r\n    if (oldVnode._isComponent) updateComponent(oldVnode, newVnode)\r\n\r\n    if (!oldVnode.tag) {  // 是文本节点, 比较文本的内容\r\n        if (newVnode.text != oldVnode.text) {\r\n            el.textContent = newVnode.text\r\n        }\r\n    }\r\n\r\n    // 接下来需要对比标签属性\r\n    patchProps(el, oldVnode, newVnode)\r\n\r\n    // 接下来需要对比子节点\r\n    patchChildren(el, oldVnode.children || [], newVnode.children || [])\r\n\r\n    return el\r\n}\r\n\r\nfunction patchProps(el, oldVnode, newVnode) {\r\n    let oldProps = oldVnode.data || {}\r\n    let newProps = newVnode.data || {}\r\n    let oldStyle = oldProps.style || {}\r\n    let newStyle = newProps.style || {}\r\n\r\n    for (let key in oldStyle) { // 老节点中有新节点没有的样式, 将老节点中的该样式删除\r\n        if (!newStyle[key]) {\r\n            el.style[key] = ''\r\n        }\r\n    }\r\n\r\n    for (let key in oldProps) { // 老节点中有新节点没有的标签属性, 将老节点中的该标签属性删除\r\n        if (!newProps[key] && key !== 'on') {\r\n            el.removeAttribute(key)\r\n        }\r\n    }\r\n\r\n    for (let key in newProps) { // 新老节点都有的属性, 循环更新节点属性\r\n        if (key === 'attrs') {\r\n            Object.keys(newProps.attrs).forEach(attrName => el.setAttribute(attrName, newProps.attrs[attrName]))\r\n        } else if (key === 'style') {\r\n            for (let styleName in newProps.style) {\r\n                el.style[styleName] = newProps.style[styleName]\r\n            }\r\n        } else if (key === 'on') {\r\n            /* Object.keys(newProps.on).forEach(handlerName => {\r\n                el.addEventListener(handlerName, newProps.on[handlerName])\r\n            }) */\r\n        } else if (key === 'ref') {\r\n            // vm.$refs[newProps.ref] = el\r\n        } else if (key === 'props') {\r\n            oldProps.props = newProps.props\r\n        } else if (key === 'hook') {\r\n\r\n        } else {\r\n            el.setAttribute(key, newProps[key])\r\n        }\r\n    }\r\n\r\n    if (newVnode.directives) {\r\n        newVnode.directives.forEach(directive => {\r\n            if (directive.name === 'show') {\r\n                el.removeAttribute('style')\r\n                // console.log(typeof directive.value, `display: ${directive.value ? 'block' : 'none'}`)\r\n                el.setAttribute('style', `display: ${directive.value ? 'block' : 'none'}`)\r\n            } else if (directive.name === 'model') {\r\n                if (el.nodeName === 'INPUT') {\r\n                    if (newVnode.data.attrs.type === 'text') {\r\n                        newVnode.el.value = directive.value\r\n                    } else if (newVnode.data.attrs.type === 'checkbox') {\r\n                        newVnode.el.checked = directive.value\r\n                    }\r\n                }\r\n            } else {\r\n                console.log(newVnode)\r\n                Object.keys(newVnode.vm.$options.directives).forEach(key => {\r\n                    if (key === directive.name) {\r\n                        let directiveMatch = newVnode.vm.$options.directives[key]\r\n\r\n                        if (directiveMatch) directiveMatch.update(newVnode.el, directive)\r\n                    }\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    return el\r\n}\r\n\r\nfunction patchChildren(el, oldChildren, newChildren) {\r\n    if (oldChildren.length && newChildren.length) { // 新老节点中都有子元素, 进行完整的对比\r\n        updateChildren(el, oldChildren, newChildren)\r\n    } else if (!oldChildren.length) { // 老节点没有子元素, 则将新节点所有子元素挂在el上\r\n        newChildren.forEach(child => {\r\n            el.appendChild(createElement(child))\r\n            /* const childElement = createElement(child)\r\n            el.appendChild(childElement)\r\n            console.log(child) */\r\n        })\r\n    } else if (!newChildren.length) { // 新节点没有子元素, 则将el中所有子元素删除\r\n        el.innerHTML = ''\r\n    }\r\n\r\n    return el\r\n}\r\n\r\nfunction updateChildren(el, oldChildren, newChildren) {\r\n    // 采用双指针, 同级比对子节点\r\n    let oldChildrenStartIndex = 0\r\n    let newChildrenStartIndex = 0\r\n    let oldChildrenEndIndex = oldChildren.length - 1\r\n    let newChildrenEndIndex = newChildren.length - 1\r\n\r\n    let oldStartVnode = oldChildren[oldChildrenStartIndex]\r\n    let newStartVnode = newChildren[newChildrenStartIndex]\r\n    let oldEndVnode = oldChildren[oldChildrenEndIndex]\r\n    let newEndVnode = newChildren[newChildrenEndIndex]\r\n\r\n    function makeIndexByKey(children) {\r\n        let map = {}\r\n        children.forEach((child, index) => map[child.key] = index)\r\n        return map\r\n    }\r\n\r\n    let map = makeIndexByKey(oldChildren)\r\n\r\n    // if (oldChildrenEndIndex === 0 && newChildrenEndIndex === 0) patchVnode(oldStartVnode, newStartVnode)\r\n\r\n    while (oldChildrenStartIndex !== oldChildrenEndIndex || newChildrenStartIndex !== newChildrenEndIndex) {\r\n        // 如果新旧子节点有一方的头指针与尾指针重合, 说明对比已经结束\r\n        if (!oldStartVnode) {\r\n            oldStartVnode = oldChildren[++oldChildrenStartIndex]\r\n        } else if (!oldEndVnode) {\r\n            oldEndVnode = oldChildren[__oldChildrenEndIndex]\r\n        } else if (isSameVnode(oldStartVnode, newStartVnode)) { // 如果新旧节点中的头节点相同, 从头开始对比(这样比较对数组尾部操作(push, pop等)效率较高)\r\n            patchVnode(oldStartVnode, newStartVnode)\r\n            oldStartVnode = oldChildren[++oldChildrenStartIndex] // 每次比对后, 新旧节点的头指针向后移动到下一个节点\r\n            newStartVnode = newChildren[++newChildrenStartIndex]\r\n        } else if (isSameVnode(oldEndVnode, newEndVnode)) { // 如果新旧节点中的尾节点相同, 从后面开始对比(这样比较对数组头部操作(shift, unshift等)效率较高)\r\n            patchVnode(oldEndVnode, newEndVnode)\r\n            oldEndVnode = oldChildren[--oldChildrenEndIndex]\r\n            newEndVnode = newChildren[--newChildrenEndIndex]\r\n        } else if (isSameVnode(oldEndVnode, newStartVnode)) { // 新的头节点与旧的尾节点相同, 进行交叉对比(这样比较对数组的排序操作(reverse, sort等)效率较高)\r\n            patchVnode(oldEndVnode, newStartVnode)\r\n            el.insertBefore(oldEndVnode.el, oldStartVnode.el)\r\n            oldEndVnode = oldChildren[--oldChildrenEndIndex]\r\n            newStartVnode = newChildren[++newChildrenStartIndex]\r\n        } else if (isSameVnode(oldStartVnode, newEndVnode)) { // 旧的头节点与新的尾节点相同, 进行交叉对比(这样比较对数组的排序操作(reverse, sort等)效率较高)\r\n            patchVnode(oldStartVnode, newEndVnode)\r\n            el.insertBefore(oldStartVnode.el, oldEndVnode.el.nextSibling)\r\n            oldStartVnode = oldChildren[++oldChildrenStartIndex]\r\n            newEndVnode = newChildren[--newChildrenEndIndex]\r\n        } else { // 新旧节点的头尾都不相同, 想要尽量复用节点, 进行乱序对比\r\n            let moveIndex = map[newStartVnode.key]\r\n            \r\n            if (moveIndex != undefined) {\r\n                let moveVnode = oldChildren[moveIndex]\r\n                el.insertBefore(moveVnode.el, oldStartVnode.el)\r\n                oldChildren[moveIndex] = undefined\r\n                patch(moveVnode, newStartVnode)\r\n            } else {\r\n                el.insertBefore(createElement(newStartVnode).el, oldStartVnode.el)\r\n            }\r\n\r\n            newStartVnode = newChildren[++newChildrenStartIndex]\r\n        }\r\n    }\r\n\r\n    patchVnode(oldStartVnode, newStartVnode) // 如果children只有一项的情况/双指针重合但双指针所指的节点还没有比对\r\n\r\n    if (oldChildrenStartIndex < oldChildrenEndIndex) {\r\n        // 对比结束后旧节点中还有子节点的情况, 说明删除了部分旧节点, 应当把这些剩余的子节点删除\r\n        for (let index = oldChildrenStartIndex; index <= oldChildrenEndIndex; index++) {\r\n            let childEl = oldChildren[index].el\r\n            el.removeChild(childEl)\r\n        }\r\n    }\r\n\r\n    if (newChildrenStartIndex < newChildrenEndIndex) {\r\n        // 对比结束后新节点中还有子节点的情况, 说明增加了新节点, 应当把这些子节点挂在el上\r\n        for (let index = newChildrenStartIndex; index <= newChildrenEndIndex; index++) {\r\n            // el.appendChild(createElement(newChildren[index]))\r\n            let anchor = newChildren[newChildrenEndIndex + 1] ? newChildren[newChildrenEndIndex + 1].el : null // 新节点有可能向前或者向后插入, 经过比对后如果新节点的尾指针后面没有元素, 说明是向后插入；如果后面有元素, 说明是向前插入\r\n            el.insertBefore(childEl, anchor) // 如果anchor是null, 默认是appendChild\r\n        }\r\n    }\r\n}\r\n\r\nexport function updateChildComponent(vm, propsData, listeners, parentVnode, renderChildren) {\r\n    /* var prevVNode = vm.$vnode\r\n    vm.$options._parentVnode = parentVnode\r\n    vm.$vnode = parentVnode // update vm's placeholder node without re-render\r\n    if (vm._vnode) {\r\n        // update child tree's parent\r\n        vm._vnode.parent = parentVnode\r\n    }\r\n    vm.$options._renderChildren = renderChildren\r\n    // update $attrs and $listeners hash\r\n    // these are also reactive so they may trigger child update if the child\r\n    // used them during render\r\n    var attrs = parentVnode.data.attrs || emptyObject;\r\n    if (vm._attrsProxy) {\r\n        // force update if attrs are accessed and has changed since it may be\r\n        // passed to a child component.\r\n        if (syncSetupProxy(vm._attrsProxy, attrs, (prevVNode.data && prevVNode.data.attrs) || emptyObject, vm, '$attrs')) {\r\n            needsForceUpdate = true;\r\n        }\r\n    } */\r\n    var attrs = parentVnode.data.attrs || {}\r\n    vm.$attrs = attrs\r\n    vm.$options._renderChildren = renderChildren\r\n    var needsForceUpdate = !!(renderChildren || // has new static slots\r\n    vm.$options._renderChildren || // has old static slots\r\n    hasDynamicScopedSlot)\r\n    /* // update listeners\r\n    listeners = listeners || emptyObject;\r\n    var prevListeners = vm.$options._parentListeners;\r\n    if (vm._listenersProxy) {\r\n        syncSetupProxy(vm._listenersProxy, listeners, prevListeners || emptyObject, vm, '$listeners');\r\n    }\r\n    vm.$listeners = vm.$options._parentListeners = listeners;\r\n    updateComponentListeners(vm, listeners, prevListeners); */\r\n    // update props\r\n    if (propsData && vm.$options.props) {\r\n        var props = vm._props\r\n        Object.keys(propsData).forEach(key => {\r\n            props[key] = propsData[key]\r\n        })\r\n        vm.$options.propsData = propsData\r\n    }\r\n    if (needsForceUpdate) {\r\n        vm.$slots = resolveSlots(renderChildren, parentVnode.context)\r\n        vm._watcher.update()\r\n    }\r\n}\r\n\r\nfunction createComponent(vnode) { // createComponent()方法判断虚拟DOM是否为组件节点, 如果是组件节点, 再调用其_init()方法\r\n    let i = vnode.data\r\n\r\n    if ((i = i.hook) && (i = i._init)) { // 组件节点的vnode中的data具有hook属性, 先将i赋值为vnode.data.hook, 再将i赋值为vnode.data.hook._init\r\n        i(vnode)\r\n    }\r\n\r\n    if (vnode.componentInstance) {\r\n        return true\r\n    }\r\n}\r\n\r\nfunction updateComponent(oldVnode, newVnode) {\r\n    let i = newVnode.data\r\n    if (i && (i = i.hook) && (i = i.prepatch)) {\r\n        i(oldVnode, newVnode)\r\n    }\r\n\r\n}\r\n\r\nexport function createElement(vnode) {\r\n    // createElement()方法将虚拟DOM转换为真实DOM\r\n    const {vm, tag, data, children, text, directives} = vnode\r\n\r\n    if (typeof tag === 'string') { // 普通节点\r\n        // debugger\r\n        if(createComponent(vnode)) { // 组件节点\r\n            return vnode.componentInstance.$el\r\n        }\r\n\r\n        vnode.el = document.createElement(tag)\r\n        for (let key in data) {\r\n            if (key === 'attrs') {\r\n                Object.keys(data.attrs).forEach(attrName => vnode.el.setAttribute(attrName, data.attrs[attrName]))\r\n            } else if (key === 'style') {\r\n                let styleString = ''\r\n                for (let styleKey in data.style) {\r\n                    styleString += `${styleKey}: ${data.style[styleKey]}; `\r\n                }\r\n                vnode.el.setAttribute('style', styleString.slice(0, -2))\r\n            } else if (key === 'on') {\r\n                Object.keys(data.on).forEach(handlerName => {\r\n                    vnode.el.addEventListener(handlerName, data.on[handlerName])\r\n                })\r\n            } else if (key === 'ref') {\r\n                vm.$refs[data.ref] = vnode.el\r\n            }  else {\r\n                vnode.el.setAttribute(key, data[key])\r\n            }\r\n        }\r\n        if (children.length) {\r\n            children.forEach(item => {\r\n                if (item._isVList) {\r\n                    item.forEach(vlistItem => {\r\n                        const childElement = createElement(vlistItem)\r\n                        vnode.el.appendChild(childElement)\r\n                        if (item.directives) {\r\n                            item.directives.forEach(directive => {\r\n                                Object.keys(vm.$options.directives).forEach(key => {\r\n                                    if (key === directive.name) {\r\n                                        let directiveMatch = vm.$options.directives[key]\r\n                \r\n                                        if (directiveMatch) {\r\n                                            vm.$options.insertedDirectivesToResolve = vm.$options.insertedDirectivesToResolve || {}\r\n                                            vm.$options.insertedDirectivesToResolve[key] = {element: childElement, binding: directive}\r\n                                        }\r\n                                    }\r\n                                })\r\n                            })\r\n                        }\r\n                    })\r\n                } else {\r\n                    const childElement = createElement(item)\r\n                    vnode.el.appendChild(childElement)\r\n                    if (item.directives) {\r\n                        item.directives.forEach(directive => {\r\n                            Object.keys(vm.$options.directives).forEach(key => {\r\n                                if (key === directive.name) {\r\n                                    let directiveMatch = vm.$options.directives[key]\r\n            \r\n                                    if (directiveMatch) {\r\n                                        vm.$options.insertedDirectivesToResolve = vm.$options.insertedDirectivesToResolve || {}\r\n                                        vm.$options.insertedDirectivesToResolve[key] = {element: childElement, binding: directive}\r\n                                    }\r\n                                }\r\n                            })\r\n                        })\r\n                    }\r\n                }\r\n            })\r\n        }\r\n    } else { // 真实节点\r\n        vnode.el = document.createTextNode(text)\r\n    }\r\n\r\n    if (directives) {\r\n        directives.forEach(directive => {\r\n            if (directive.name === 'show') {\r\n                vnode.el.setAttribute('style', `display: ${directive.value ? 'block' : 'none'}`)\r\n            } else if (directive.name === 'model') {\r\n                if (vnode.el.nodeName === 'INPUT') {\r\n                    if (vnode.data.attrs.type === 'text') {\r\n                        vnode.el.value = directive.value\r\n                    } else if (vnode.data.attrs.type === 'checkbox') {\r\n                        vnode.el.checked = directive.value\r\n                    }\r\n                }\r\n            } else {\r\n                Object.keys(vm.$options.directives).forEach(key => {\r\n                    if (key === directive.name) {\r\n                        let directiveMatch = vm.$options.directives[key]\r\n\r\n                        if (directiveMatch) directiveMatch.bind(vnode.el, directive)\r\n                    }\r\n                })\r\n            }\r\n        })\r\n    }\r\n    return vnode.el\r\n}\r\n\r\nfunction addHandler(el, name, value, modifiers, important, range, dynamic) {\r\n    let events\r\n    if (modifiers.native) {\r\n        delete modifiers.native\r\n        events = el.nativeEvents || (el.nativeEvents = {})\r\n    }\r\n    else {\r\n        events = el.events || (el.events = {})\r\n    }\r\n    let newHandler = rangeSetItem({ value: value.trim(), dynamic: dynamic }, range)\r\n    if (modifiers !== emptyObject) {\r\n        newHandler.modifiers = modifiers\r\n    }\r\n    let handlers = events[name]\r\n\r\n    if (Array.isArray(handlers)) {\r\n        important ? handlers.unshift(newHandler) : handlers.push(newHandler)\r\n    }\r\n    else if (handlers) {\r\n        events[name] = important ? [newHandler, handlers] : [handlers, newHandler]\r\n    }\r\n    else {\r\n        events[name] = newHandler\r\n    }\r\n}\r\n","import {callHook} from \"../lifeCycle.js\"\r\nimport { updateChildComponent } from \"./patch.js\"\r\n\r\nexport function createElementVNode(vm, tag, data, ...children) {\r\n    // createElementVNode()方法生成普通节点的虚拟DOM\r\n    if (data == null) data = {}\r\n    let key = data.key\r\n    if (key !== undefined) delete data.key\r\n    let directives = data.directives\r\n    if (directives) delete data.directives\r\n    if (Array.isArray(children[0])) children = children[0]\r\n    if (isReservedTag(tag)) { // HTML节点\r\n        return vnode(vm, tag, key, data, children, null, undefined, false, directives)\r\n    } else { // 组件节点\r\n        let Ctor = vm.$options.components[tag] // Ctor是组件的构造函数, 是在vm.$options.components的原型链上找到的\r\n        // console.log(vm.$options.components.__proto__)\r\n        return createComponentVnode(vm, tag, key, data, children, Ctor, directives)\r\n    }\r\n}\r\n\r\nexport function createTextVNode(vm, text) {\r\n    // createTextVNode()方法生成文本节点的虚拟DOM\r\n    return vnode(vm, undefined, undefined, undefined, undefined, text)\r\n\r\n}\r\n\r\nexport function createEmptyVNode() {\r\n    let text = ''\r\n    return vnode(undefined, undefined, undefined, undefined, undefined, text)\r\n}\r\n\r\nfunction createComponentVnode(vm, tag, key, data, children, Ctor, directives) {\r\n    // createComponentVnode()方法生成组件的虚拟DOM\r\n    // Ctor = typeof Ctor === 'object' ? vm.__proto__.constructor.extend(Ctor) : Ctor\r\n    // console.log(vm.__proto__.constructor = vm.$options._base) // 可以不用通过vm.$options._base拿到Vue构造函数上的静态方法\r\n    if (typeof Ctor === 'object') {\r\n        Ctor = vm.$options._base.extend(Ctor)\r\n    }\r\n\r\n    const propsData = extractPropsFromVNodeData(data, Ctor)\r\n    const listeners = data.on\r\n    data.on = data.nativeOn\r\n    const ref = data.ref\r\n    delete data.ref\r\n    if (data.model) transformModel(Ctor.options, data)\r\n\r\n    data.hook = { // 标识该虚拟DOM是组件节点, 同时保存其挂载方法\r\n        _init(vnode) {\r\n            let instance = vnode.componentInstance = new vnode.componentOptions.Ctor(vnode) // 获取该节点的构造函数Ctor随后实例化, 并将该组件实例挂在vnode.componentInstance上\r\n            if (vnode.directives) instance.directives = vnode.directives\r\n            callHook(vnode.componentInstance, 'beforeMount')\r\n            instance.$mount() // 调用组件实例的$mount()方法 -> 调用mountComponent()方法, instance上会增加$el\r\n            callHook(vnode.componentInstance, 'mounted')\r\n            if (instance.directives) {\r\n                instance.directives.forEach(directive => {\r\n                    if (directive.name === 'show') {\r\n                        console.log(instance)\r\n                        instance.$el.setAttribute('style', `display: ${directive.value ? 'block' : 'none'}`)\r\n                    }\r\n                })\r\n            }\r\n        },\r\n\r\n        prepatch(oldVnode, vnode) {\r\n            let options = vnode.componentOptions\r\n            let child = (vnode.componentInstance = oldVnode.componentInstance)\r\n            updateChildComponent(child, options.propsData, // updated props\r\n            options.listeners, // updated listeners\r\n            vnode, // new parent vnode\r\n            options.children // new children\r\n            )\r\n        }\r\n    }\r\n\r\n    return vnode(vm, tag, key, data, undefined, null, {Ctor, propsData, listeners, ref, children: children}, true, directives)\r\n}\r\n\r\nfunction vnode(vm, tag, key, data, children, text, componentOptions, _isComponent, directives) {\r\n    return {\r\n        vm,\r\n        tag,\r\n        key,\r\n        data,\r\n        children,\r\n        text,\r\n        componentOptions,\r\n        _isComponent,\r\n        directives\r\n    }\r\n}\r\n\r\nfunction isReservedTag(tag) { // 判断节点是否是组件节点\r\n    return ['a', 'div', 'p', 'span', 'button', 'ul', 'li', 'html', 'body', 'head', 'link', 'meta', 'style', \r\n    'title', 'footer', 'header', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'nav', 'section', 'dd', 'dl', 'dt', 'img', 'input', 'checkbox'].includes(tag)\r\n}\r\n\r\nexport function isSameVnode(vnode1, vnode2) { // 比较两个虚拟DOM是否相同：1、标签名是否相同；2、标签的key是否相同\r\n    return vnode1.tag === vnode2.tag && vnode1.key === vnode2.key\r\n}\r\n\r\nfunction extractPropsFromVNodeData(data, Ctor) {\r\n    let propOptions = Ctor.options.props\r\n    if (!propOptions) return\r\n\r\n    const res = {}\r\n\r\n    for (let key in propOptions) {\r\n        checkProp(res, data, propOptions[key])\r\n    }\r\n\r\n    return res;\r\n}\r\n\r\nfunction checkProp(res, data, key) {\r\n    if (!data.props) data.props = {}\r\n    if (data[key] !== undefined) {\r\n        res[key] = data[key]\r\n        data.props[key] = data[key]\r\n        delete data[key]\r\n    } else {\r\n        delete data.props[key]\r\n    }\r\n}\r\n\r\nfunction transformModel(options, data) {\r\n    var prop = (options.model && options.model.prop) || 'value';\r\n    var event = (options.model && options.model.event) || 'input';\r\n    (data.attrs || (data.attrs = {}))[prop] = data.model.value;\r\n    var on = data.on || (data.on = {});\r\n    var existing = on[event];\r\n    var callback = data.model.callback;\r\n    if (isDef(existing)) {\r\n        if (isArray(existing)\r\n            ? existing.indexOf(callback) === -1\r\n            : existing !== callback) {\r\n            on[event] = [callback].concat(existing);\r\n        }\r\n    }\r\n    else {\r\n        on[event] = callback;\r\n    }\r\n}\r\n\r\nexport function renderSlot(name, fallbackRender, props, bindObject) {\r\n    // var scopedSlotFn = this.$scopedSlots[name];\r\n    var nodes\r\n    /* if (scopedSlotFn) {\r\n        // scoped slot\r\n        props = props || {};\r\n        if (bindObject) {\r\n            if (!isObject(bindObject)) {\r\n                warn$2('slot v-bind without argument expects an Object', this);\r\n            }\r\n            props = extend(extend({}, bindObject), props);\r\n        }\r\n        nodes =\r\n            scopedSlotFn(props) ||\r\n                (isFunction(fallbackRender) ? fallbackRender() : fallbackRender);\r\n    }\r\n    else { */\r\n        nodes =\r\n            this.$slots[name] ||\r\n                (isFunction(fallbackRender) ? fallbackRender() : fallbackRender);\r\n    // }\r\n    console.log(nodes)\r\n    var target = props && props.slot;\r\n    if (target) {\r\n        return this.$createElement('template', { slot: target }, nodes);\r\n    }\r\n    else {\r\n        return nodes;\r\n    }\r\n}\r\n","import {createElementVNode, createTextVNode, createEmptyVNode} from './vdom/index.js'\r\nimport {patch} from './vdom/patch.js'\r\nimport Watcher from './observe/watcher.js'\r\n\r\n// initLifeCycle()方法用来给Vue添加_c, _v, _s, _render, _update方法\r\nexport function initLifeCycle(Vue) {\r\n    Vue.prototype._c = function () {\r\n        // _c()方法调用createElementVNode()将AST语法树中的普通节点转换为虚拟DOM\r\n        return createElementVNode(this, ...arguments)\r\n    }\r\n\r\n    Vue.prototype._v = function () {\r\n        // _v()方法调用createTextVNode()将AST语法树中的文本节点转换为虚拟DOM\r\n        return createTextVNode(this, ...arguments)\r\n    }\r\n\r\n    Vue.prototype._s = function (value) {\r\n        // _s()方法将插值语法转换为值\r\n        if (typeof value == 'object') return value\r\n        // return JSON.stringify(value)\r\n        return value\r\n    }\r\n\r\n    Vue.prototype._e = function () {\r\n        return createEmptyVNode()\r\n    }\r\n\r\n    Vue.prototype._l = function (val, render) {\r\n        let children = []\r\n        if (Array.isArray(val) || typeof val === 'string') {\r\n            for (let i = 0; i < val.length; i++) {\r\n                children.push(render(val[i], i))\r\n                children._isVList = true\r\n            }\r\n        } else if (typeof val === 'number') {\r\n            for (i = 0; i < val; i++) {\r\n                children[i] = render(i + 1, i)\r\n            }\r\n        } else if (typeof val === 'object') {\r\n            keys = Object.keys(val)\r\n            for (i = 0; i < keys.length; i++) {\r\n                key = keys[i]\r\n                children[i] = render(val[key], key, i)\r\n            }\r\n        }\r\n        return children\r\n    }\r\n\r\n    Vue.prototype._t = function(name, props) {\r\n        let scopedSlotFn = this.$scopedSlots[name]\r\n        let nodes\r\n        if (scopedSlotFn) {\r\n            // scoped slot\r\n            props = props || {}\r\n            nodes = scopedSlotFn(props)\r\n            if (nodes) {\r\n                const {vm, tag, data, children} = nodes\r\n                return createElementVNode(vm, tag, data, children)\r\n            }\r\n        } else {\r\n            nodes = this.$slots[name]\r\n            if (nodes) {\r\n                const {vm, tag, data, children} = nodes[0]\r\n                return createElementVNode(vm, tag, data, children)\r\n            } else {\r\n                return createEmptyVNode()\r\n            }\r\n        }\r\n    }\r\n\r\n    Vue.prototype._u = function(fns, res) {\r\n        res = res || {}\r\n        for (let i = 0; i < fns.length; i++) {\r\n            let slot = fns[i]\r\n            if (slot) {\r\n                res[slot.key] = slot.fn\r\n            }\r\n        }\r\n        return res\r\n    }\r\n\r\n    Vue.prototype._render = function () {\r\n        // _render()方法用来调用compileToFunction()生成的render方法（被挂在vm.$options上）, 返回相应的虚拟DOM\r\n        const vm = this\r\n        return vm.$options.render.call(vm)\r\n    }\r\n\r\n    Vue.prototype._update = function (vnode) {\r\n        // _update()方法接收虚拟DOM, 调用patch()方法实现初次挂载真实DOM或更新真实DOM\r\n        const vm = this\r\n        const el = vm.$el\r\n        const preNode = vm._vnode // 将更新前的虚拟DOM保存在实例的_vnode中\r\n        vm._vnode = vnode // 将实例上的_vnode更新, 以便下一次更新时拿到当前的虚拟DOM\r\n\r\n        if (preNode) { // 更新前有虚拟DOM, 不是初次渲染, 走更新流程\r\n            vm.$el = patch(preNode, vnode)\r\n        } else { // 更新前没有虚拟DOM, 是初次渲染, 走初次渲染流程\r\n            vm.$el = patch(el, vnode)\r\n        }\r\n    }\r\n}\r\n\r\nexport function mountComponent(vm, el) {\r\n    // mountComponent()方法将el挂载在vm上, 再调用vm上的_render()方法生成el的虚拟DOM, 再对虚拟DOM调用vm身上的_update()方法挂载或更新真实DOM\r\n    vm.$el = el\r\n    \r\n    // 重新渲染页面的方法\r\n    const updateComponent = () => {\r\n        vm._update(vm._render())\r\n    }\r\n\r\n    vm._watcher = new Watcher(vm, updateComponent, true) // 渲染页面的逻辑封装在watcher中\r\n    // console.log(watcher)\r\n}\r\n\r\nexport function callHook(vm, hook) { // 调用生命周期函数的方法\r\n    const handlers = vm.$options[hook]\r\n\r\n    if (handlers) handlers.forEach(handler => handler.call(vm))\r\n}\r\n","const strats = {}\r\nconst LIFECYCLE = ['beforeCreate', 'created', 'beforeMount', 'mounted', 'beforeUpdate', 'updated', 'beforeDestroy', 'destroyed']\r\n\r\nLIFECYCLE.forEach(hook => {\r\n    strats[hook] = function(p, c) { // 此方法用来把vm.$options中的生命周期函数与mixin中的生命周期函数合并\r\n        // 第一次调用：p: {}, c: hook: function() {}, 结果处理为：{hook: [f]}\r\n        // 第二次调用：p: {hook: [f]},  c: hook: function() {}, 结果处理为：{hook: [f, f]}\r\n        if (c) {\r\n            if (p) {\r\n                return p.concat(c) // 父子对象中都有该生命周期函数, 那么将二者合并\r\n            } else {\r\n                return [c] // 只有子对象有该生命周期函数, 将该生命周期函数套一层数组返回, 以便以后追加\r\n            }\r\n        } else { // 能够调用到mergeField()方法, 则p或c至少有一个有该生命周期函数, 这里只能是父对象中有。那么父对象中的该生命周期函数已被维护成数组, 直接返回即可\r\n            return p\r\n        }\r\n    }\r\n})\r\n\r\nstrats.components = function(parentVal, childVal) { // strats.components方法将全局组件(Vue.components)与组件内部定义的局部组件(vm.components)进行合并\r\n    let res = Object.create(parentVal)\r\n\r\n    for (let key in childVal) {\r\n        res[key] = childVal[key]\r\n    }\r\n\r\n    return res\r\n}\r\n\r\nexport function mergeOptions(parent, child) { // mergeOptions()方法用于合并对象属性\r\n    const options = {}\r\n\r\n    for (let key in parent) { // 遍历父对象中的属性添加到options中\r\n        mergeField(key)\r\n    }\r\n\r\n    for (let key in child) { // 遍历子对象中的属性, 如果父对象中没有, 就添加到options中(父对象中有的情况下的处理逻辑在遍历父对象时的mergeField()方法里)\r\n        if (!parent.hasOwnProperty(key)) {\r\n            mergeField(key)\r\n        }\r\n    }\r\n\r\n    function mergeField(key) {\r\n        // 策略模式, 简化多轮的if else判断, 将判断条件写在strats中\r\n        if (strats[key]) { // 如果是生命周期函数等情况, 需要维护成一个队列, 需要时一并调用\r\n            options[key] = strats[key](parent[key], child[key]) // 此为strats中函数的调用, strats中的函数是用来合并参数的函数\r\n        } else { // 如果不是策略中的情况, 优先采用子对象\r\n            options[key] = child[key] || parent[key]\r\n        }\r\n    }\r\n\r\n    return options\r\n}\r\n","import {initState, initEvents, initRender} from './state.js'\r\nimport {compileToFunction} from './compiler/index.js'\r\nimport {set, del} from './observe/index.js'\r\nimport {mountComponent, callHook} from './lifeCycle.js'\r\nimport Watcher, {nextTick} from './observe/watcher.js'\r\nimport {mergeOptions} from './utils.js'\r\n\r\nexport function initMixin(Vue) {\r\n    // console.log('@initMixin方法用于给Vue添加_init方法')\r\n    Vue.prototype._init = function(options) {\r\n        const vm = this // 原型中this指向实例\r\n        // 是否是组件\r\n        if (options && options._isComponent) {\r\n            initInternalComponent(vm, options)\r\n        } else {\r\n            vm.$options = mergeOptions(this.constructor.options, options) // 给vm添加$options属性, 将用户的选项和定义的全局指令(this.constructor指向Vue/Sub(对子组件来说)构造函数, 上面的静态属性Vue.options中包含全局指令等), 过滤器都放在$options中}\r\n        }\r\n\r\n        initEvents(vm)\r\n        initRender(vm)\r\n        callHook(vm, 'beforeCreate')\r\n        initState(vm) // 给vm添加data, methods, computed等等属性\r\n        callHook(vm, 'created')\r\n\r\n        if (options.el) {\r\n            callHook(vm, 'beforeMount')\r\n            vm.$mount(options.el)\r\n            callHook(vm, 'mounted')\r\n            if (vm.$options.insertedDirectivesToResolve) {\r\n                Object.keys(vm.$options.insertedDirectivesToResolve).forEach(key => {\r\n                    const directive = vm.$options.insertedDirectivesToResolve[key]\r\n                    const insertedFn = vm.$options.directives[key].inserted\r\n                    insertedFn.call(vm, directive.element, directive.binding)\r\n                })\r\n                delete vm.$options.insertedDirectivesToResolve\r\n            }\r\n        }\r\n    }\r\n\r\n    Vue.prototype.$mount = function(el) {\r\n        const vm = this\r\n        const element = document.querySelector(el)\r\n        const ops = vm.$options\r\n\r\n        if (!ops.render) { // 没有render函数的情况下\r\n            let template // 选择template\r\n            if (!ops.template && element) { // 没写template, 有element, 模板采用element\r\n                template = element.outerHTML\r\n            } else { // 有template, 模板采用template\r\n                template = ops.template\r\n            }\r\n\r\n            if (template) { // 没写render, 有了上面的模板的情况下, 利用自己的render方法, 将模板编译\r\n                const render = compileToFunction(template)\r\n                ops.render = render // 给vm.$options补充render方法\r\n            }\r\n        }\r\n\r\n        mountComponent(vm, element) // mountComponent方法将模板编译为虚拟DOM, 转换为真实DOM挂在element上, 或者将旧的真实DOM进行更新\r\n    }\r\n\r\n    Vue.prototype.$set = set\r\n\r\n    Vue.prototype.$delete = del\r\n\r\n    Vue.prototype.$on = function (event, fn) {\r\n        const vm = this\r\n        if (Array.isArray(event)) {\r\n            for (let i = 0; i < event.length; i++) {\r\n                vm.$on(event[i], fn)\r\n            }\r\n        }\r\n        else {\r\n            (vm._events[event] || (vm._events[event] = [])).push(fn)\r\n        }\r\n        return vm\r\n    }\r\n\r\n    Vue.prototype.$off = function (event, fn) {\r\n        const vm = this\r\n\r\n        if (!arguments.length) {\r\n            vm._events = Object.create(null)\r\n            return vm\r\n        }\r\n\r\n        if (isArray(event)) {\r\n            for (let i = 0; i < event.length; i++) {\r\n                vm.$off(event[i], fn)\r\n            }\r\n            return vm\r\n        }\r\n        // specific event\r\n        var cbs = vm._events[event]\r\n        if (!cbs) {\r\n            return vm\r\n        }\r\n        if (!fn) {\r\n            vm._events[event] = null\r\n            return vm\r\n        }\r\n        // specific handler\r\n        var cb\r\n        var i = cbs.length\r\n        while (i--) {\r\n            cb = cbs[i]\r\n            if (cb === fn || cb.fn === fn) {\r\n                cbs.splice(i, 1)\r\n                break\r\n            }\r\n        }\r\n        return vm\r\n    }\r\n\r\n    Vue.prototype.$emit  = function(event) {\r\n        const vm = this\r\n        const cbs = vm._events[event]\r\n        const args = [...arguments]\r\n        args.shift()\r\n        if (cbs) {\r\n            cbs.forEach(cb => cb.call(vm, ...args))\r\n        }\r\n        return vm\r\n    }\r\n\r\n    Vue.prototype.$refs = {}\r\n}\r\n\r\nexport function initStateMixin(Vue) {\r\n    Vue.prototype.$nextTick = nextTick\r\n\r\n    Vue.prototype.$watch = function (expOrFn, cb) {\r\n        return new Watcher(this, expOrFn, {user: true}, cb)\r\n    }\r\n}\r\n\r\nfunction initInternalComponent(vm, options) {\r\n    vm.$options = Object.create(vm.constructor.options)\r\n    console.log(vm, options.componentOptions)\r\n    /* var opts = (vm.$options = Object.create(vm.constructor.options));\r\n    // doing this because it's faster than dynamic enumeration.\r\n    var parentVnode = options._parentVnode;\r\n    opts.parent = options.parent;\r\n    opts._parentVnode = parentVnode;\r\n    var vnodeComponentOptions = parentVnode.componentOptions; */\r\n    vm.$options.beforeCreate = vm.constructor.options.beforeCreate\r\n    vm.$options.propsData = options.componentOptions.propsData\r\n    vm.$options._parentListeners = options.componentOptions.listeners\r\n    vm.$options._renderChildren = options.componentOptions.children\r\n    if (options.componentOptions.ref) vm.$refs[options.componentOptions.ref] = vm\r\n    /* opts._renderChildren = vnodeComponentOptions.children;\r\n    opts._componentTag = vnodeComponentOptions.tag;\r\n    if (options.render) {\r\n        opts.render = options.render;\r\n        opts.staticRenderFns = options.staticRenderFns;\r\n    } */\r\n}\r\n\r\nfunction callDirectiveInsertedHook(options) {\r\n    console.log(options)\r\n}\r\n","import {mergeOptions} from './utils.js'\r\nimport {set, del} from './observe/index.js'\r\n\r\nexport function initGlobalAPI(Vue) {\r\n    // Vue.prototype里面的是原型方法(vm能访问到的), Vue里面的是静态属性/方法, 可以全局访问(保存在Vue构造函数里, 通过Vue.xxx访问)\r\n    Vue.options = {\r\n        _base: Vue // 将当前Vue构造函数保存在Vue.options._base中, 通过继承Vue的Sub构造函数new出来的实例子组件可以通过此来拿到Vue构造函数上的静态方法(Sub未继承Vue的静态方法)\r\n    }\r\n    \r\n    Vue.mixin = function(mixin) {\r\n        // mixin方法用于将用户的选项(vm.$options)和全局的options(Vue.options)进行合并\r\n        this.options = mergeOptions(this.options, mixin)\r\n        return this // this指向Vue构造函数, 返回this可以实现链式调用\r\n    }\r\n\r\n    Vue.extend = function(options) {\r\n        // extend()方法返回一个构造函数, 用于创建子组件。创建一个组件, 就是new一个Sub实例\r\n        function Sub(options = {}) {\r\n            this._init(options) // 默认对子组件采用初始化操作, 此处的options是new Sub(options)中的options\r\n        }\r\n        Sub.prototype = Object.create(Vue.prototype) // Sub.prototype.__proto__ = Vue.prototype\r\n        Sub.prototype.constructor = Sub  // Sub的构造函数指向自身, 上面两条语句实现了继承\r\n        // console.log(Sub.prototype, Vue.prototype)\r\n        Sub.options = mergeOptions(Vue.options, options) // 将自身的options(Vue.extend(options)中传入的options)和全局的options(Vue.options)进行合并(Vue.options中包含_base, 全局components, directives等)\r\n        \r\n        /* 注：为什么组件中data必须是一个函数？\r\n            因为每一次创建新组件时, 都要去new Sub(), 所有的Sub实例都是Sub构造函数实例化产生的, 共用静态属性Sub.options。\r\n            在这个过程中调用_init()方法, 会对从Vue.extend(options)传入的options(其中包含data)进行mergeOptions(), 合并到Sub.options上。如果data是一个对象, 就是共享的。\r\n            如果用Sub.options.data()取得数据, 那么得到的数据就是非共享的, 在一个组件内修改, 不会影响到其它的组件。\r\n        */\r\n\r\n        /* 组件的挂载流程:\r\n            注册全局组件需要调用Vue.components()方法, Vue.components()方法内部调用Vue.extend()方法得到组件的Sub构造函数, 并将其保存在全局的Vue.options.components上。\r\n            在解析模板(vm.$mount(el) -> mountComponent(vm, element) -> vm._render() -> _c() -> createElementVNode())时, 如果遇到了组件标签, 会从vm.$options.components上面找到该组件的Sub构造函数(从Vue.options上面合并而来), 并调用createComponentVnode()方法去生成虚拟DOM。\r\n            在createComponentVnode()方法中, 会将其虚拟DOM上的data属性增加一个hook, 用于保存其挂载方法_init()。\r\n            随后在虚拟DOM转化为真实DOM(vm._update(vm._render()) -> patch()), 即调用patch()方法时, 内部会调用createElement()方法, 内部再调用cerateComponent()方法。\r\n            开始组件的初始化。cerateComponent()内部拿到_init()方法并调用, 此时会将Sub构造函数实例化, 并将实例挂在虚拟DOM的componentInstance上, 随后调用该实例的$mount()方法。\r\n            调用$mount()方法时不传参数, 就拿到vm.$options上的模板进行编译(vm是Sub实例, 即vnode.componentInstance), 再内部调用mountComponent()方法, 进行渲染, 添加watcher, 并将真实DOM挂在vm.$el(即Sub实例的$el, vnode.componentInstance.$el)上\r\n            此时vnode.componentInstance.$el上就有了真实DOM, createElement()方法就返回这个真实DOM, patch()方法同样返回这个真实DOM, 回到了vm._update()。随后创建父元素, 在父元素中插入子组件的真实DOM。\r\n        */\r\n        return Sub\r\n    }\r\n\r\n    Vue.options.components = {} // 全局指令, 用于保存全局组件的Sub构造函数\r\n\r\n    Vue.components = function(id, defination) {\r\n        // Vue.components方法用于定义全局组件\r\n        defination = typeof defination === 'function' ? defination : Vue.extend(defination) // defination有可能是函数或对象, 如果是函数, 说明用户已经调用了Vue.extend()方法\r\n        Vue.options.components[id] = defination\r\n    }\r\n\r\n    Vue.use = function(plugin) {\r\n        let installedPlugins = this._installedPlugins || (this._installedPlugins = [])\r\n        if (installedPlugins.indexOf(plugin) > -1) {\r\n            return this\r\n        }\r\n        // additional parameters\r\n        let args = [...arguments]\r\n        args.splice(0, 1, this)\r\n        if (typeof plugin.install === 'function') {\r\n            plugin.install.apply(plugin, args)\r\n        }\r\n        else if (typeof plugin === 'function') {\r\n            plugin.apply(null, args)\r\n        }\r\n        installedPlugins.push(plugin)\r\n        return this;\r\n    }\r\n\r\n    Vue.directive = function(id, definition) {\r\n        Vue.options.directives = Vue.options.directives || {}\r\n        if (!definition) {\r\n            return this.options['directives'][id]\r\n        } else {\r\n            if (typeof definition === 'function') {\r\n                definition = {bind: definition, update: definition}\r\n            }\r\n            this.options['directives'][id] = definition\r\n            return definition\r\n        }\r\n    }\r\n\r\n    Vue.set = set\r\n    Vue.delete = del\r\n}\r\n","import {initMixin, initStateMixin} from './init.js'\r\nimport {initLifeCycle} from './lifeCycle.js'\r\nimport {initGlobalAPI} from './globalAPI.js'\r\n\r\nfunction Vue(options) {\r\n    // console.log('@Vue_init')\r\n    this._init(options) // 调用Vue身上的_init方法(由ininMixin()方法添加到Vue上面)进行初始化\r\n}\r\n\r\ninitMixin(Vue) // initMixin方法用于给Vue添加_init\r\ninitLifeCycle(Vue)\r\ninitGlobalAPI(Vue)\r\ninitStateMixin(Vue)\r\n\r\nexport default Vue"],"names":["oldArrayProto","Array","prototype","newArrayProto","Object","create","methods","forEach","method","_oldArrayProto$method","console","log","observeArray","__ob__","_len","arguments","length","args","_key","result","call","apply","concat","splice","dep","notify","id","Dep","_classCallCheck","subs","_createClass","key","value","addSub","watcher","push","depend","target","addDep","update","stack","pushTarget","popTarget","pop","Observer","data","defineProperty","enumerable","isArray","__proto__","walk","keys","defineReactive","item","observe","dependArray","array","i","_typeof","childOb","get","set","newValue","undefined","Math","max","observer","del","Watcher","vm","updateFnOrWatchExp","options","cb","renderWatcher","getter","depId","Set","deps","lazy","dirty","user","has","add","evaluate","queueWatcher","run","oldValue","queue","pending","flushSchedulerQueue","flushQueue","slice","nextTick","callbacks","waiting","timerFunc","Promise","resolve","then","flushCallbacks","MutationObserver","textNode","document","createTextNode","characterData","textContent","setImmediate","setTimeout","flushCb","initState","$options","initData","computed","initComputed","watch","initWatch","props","initProps","initMethods","proxy","name","_data","watchers","_computedWatchers","userDef","defineComputed","handler","createWatcher","propsData","_props","bind","event","fn","$on","remove","$off","initRender","_vnode","_staticTrees","parentVnode","$vnode","_parentVnode","renderContext","context","$slots","resolveSlots","_renderChildren","$scopedSlots","resolveScopedSlots","children","slots","l","child","attrs","slot","fnContext","name_1","tag","scopedSlots","_objectSpread","initEvents","_events","listeners","_parentListeners","updateComponentListeners","oldListeners","updateListeners","on","oldOn","cur","old","fns","$watch","setter","createComputedGetter","ncname","qnameCapture","startTagOpen","RegExp","endTag","attribute","startTagClose","dynamicArgAttribute","parseHTML","htmlText","ELEMENT_TYPE","TEXT_TYPE","currentNode","root","createASTNode","type","parent","advance","n","substring","start","startNode","text","char","replace","end","parseStartTag","tagStart","match","tagAttrs","tagEnd","tagName","trim","textEnd","indexOf","startTagMatch","endTagMatch","compileToFunction","template","ast","astCode","codeGenerator","Function","attrsGenerator","bindRE","onRE","attrString","_loop","attrValue","styleAttrValue","split","_item$split","_item$split2","_slicedToArray","styleString","test","hasDirective","_loop2","v","childrenGenerator","iterable","iterator","_attrValue$split","_attrValue$split2","_attrValue$split3","_attrValue$split4","filter","attr","every","_attrs$i$name$split","_attrs$i$name$split2","arg","slotName","_ret","childrenArr","map","genChild","join","defaultTagRE","lastIndex","tokens","exec","index","input","patch","createElement","isRealElement","nodeType","newElement","parentElement","parentNode","insertBefore","nextSibling","removeChild","patchVnode","oldVnode","newVnode","isSameVnode","el","replaceChild","_isComponent","updateComponent","patchProps","patchChildren","oldProps","newProps","oldStyle","style","newStyle","removeAttribute","attrName","setAttribute","styleName","directives","directive","nodeName","checked","directiveMatch","oldChildren","newChildren","updateChildren","appendChild","innerHTML","oldChildrenStartIndex","newChildrenStartIndex","oldChildrenEndIndex","newChildrenEndIndex","oldStartVnode","newStartVnode","oldEndVnode","newEndVnode","makeIndexByKey","__oldChildrenEndIndex","moveIndex","moveVnode","childEl","anchor","updateChildComponent","renderChildren","$attrs","needsForceUpdate","hasDynamicScopedSlot","_watcher","createComponent","vnode","hook","_init","componentInstance","prepatch","$el","styleKey","handlerName","addEventListener","$refs","ref","_isVList","vlistItem","childElement","insertedDirectivesToResolve","element","binding","createElementVNode","isReservedTag","Ctor","components","createComponentVnode","createTextVNode","createEmptyVNode","_base","extend","extractPropsFromVNodeData","nativeOn","model","transformModel","instance","componentOptions","callHook","$mount","includes","vnode1","vnode2","propOptions","res","checkProp","prop","existing","callback","isDef","initLifeCycle","Vue","_c","_v","_s","_e","_l","val","render","_t","scopedSlotFn","nodes","_nodes","_nodes$","_u","_render","_update","preNode","mountComponent","handlers","strats","LIFECYCLE","p","c","parentVal","childVal","mergeOptions","mergeField","hasOwnProperty","initMixin","initInternalComponent","constructor","insertedFn","inserted","querySelector","ops","outerHTML","$set","$delete","cbs","$emit","shift","_toConsumableArray","initStateMixin","$nextTick","expOrFn","beforeCreate","initGlobalAPI","mixin","Sub","defination","use","plugin","installedPlugins","_installedPlugins","install","definition"],"mappings":"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"}